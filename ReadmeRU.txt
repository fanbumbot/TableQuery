Инклюд TableQuery предназначен для быстрого и простого взаимодействия с базами
данных. Идея закючается в том, что процесс создания основных SQL запросов
(добавление, удаление, обновление записи) разбита на несколько этапов:

1. Создание образа таблицы. Образ таблицы - данные о столбцах таблицы и их типе.
Образ таблицы создаётся 1 раз и всё время работы сервера остаётся в оперативной
памяти. Его нельзя удалить.

2. Создание таблицы. Данные таблицы включают в себя ID образа, на основе которого
будет построена таблица, базу данных и имя таблицы. Если таблица была создана,
то произойдёт перепривязка к новой таблице (новые столбцы, которые подразумевает
образ таблицы, добавлены не будут - то есть нет автоматической проверки значений).

3. Создание кэша. Кэш - привязка определённого ID внутри сервера к таблице и
определённому ID (по колонке с соответствующим названием) внутри таблицы.

Инлкюд предоставляет два новых тэга для использования - TableDB для базы данных и
TableResult для результата запроса. Разные типы могут преобразовываться друг в друга.
Так переменная с тэгом DBResult (из SQLite) преобразуется в TableResult и наоборот,
DB (тоже из SQLite) - в TableDB и наоборот. При этом данные переменные не утрачивают
своих изначальных значений (если не был явно указан тэг в выражении).
Старшие два байта переменной занимает тип базы данных или результата (SQLite - 1 или
MySQL - 2), а два младших - то, что содержалось в изначальных переменных.
Если использовать перед переменной с данными тегами знак минус, то из неё в выражение
будет извлечено значение.

INVALID_TABLEDB - невалидное выражение с тэгом TableDB
INVALID_TABLERESULT - невалидное выражение с тэгом TableResult

Функции:

TableRDUnpack({TableDB, TableResult}:rd, &type = 0, &value = 0) - 
распаковка базы данных или результата на тип и значение
rd - база данных или результат
type - тип
value - значение
Возвращаемое значение:
Всегда 1

IsValidTableResult(TableResult:result) - существует ли результат
result - результат
Возвращаемое значение:
0 - результат не существует или неверный тип результата
1 - существует

TableResultClear(TableResult:result) - очистка результата
result - результат
Возвращаемое значение:
0 - неверный тип результата или операция очистки не может быть выполнена
1 - операция очистки успешно выполнена

TableResult:TableQuery(TableDB:database, query[], {bool, _}:autodelete) - 
отправляет запрос базе данных
database - база данных
query - запрос
autodelete - нужно ли автоматически удалить полученный результат (0 если нет,
1 если да)
Возвращаемые значения:
INVALID_TABLERESULT - неверный тип базы данных
Или результат запроса

TableNumRows(TableResult:result) - узнать количество строк в ответе на запрос
result - результат
Возвращаемые значение:
0 - нет строк, неверный тип результата, не удалось выполнить операцию
1 - операция выполнена успешно

TableGetFieldAssoc(TableResult:result, field[], dest[], dest_s = sizeof(dest)) -
взять строковое значение из ответа из колонки с определённым названием
result - результат
field - название колонки
dest - строка, куда будет записано значение из колонки
dest_s - максимальная длина этой строки
Возвращаемые значения:
0 - неверный тип результата или операция не удалась
1 - операция выполнена успешно

TableGetFieldAssocInt(TableResult:result, field[]) - взять целочисленное значение
из ответа из колонки с определённым названием
result - результат
field - название колонки
Возвращаемые значения:
0 - неверный тип результата или операция не удалась
Или значение из ответа

Float:TableGetFieldAssocFloat(TableResult:result, field[]) - взять дробное значение
из ответа из колонки с определённым названием
result - результат
field - название колонки
Возвращаемые значения:
0 - неверный тип результата или операция не удалась
Или значение из ответа

TableGetField(TableResult:result, id, dest[], dest_s = sizeof(dest)) -
взять строковое значение из ответа по номеру колонки
result - результат
id - номер колонки
dest - строка, куда будет записано значение из колонки
dest_s - максимальная длина этой строки
Возвращаемые значения:
0 - неверный тип результата или операция не удалась
1 - операция выполнена успешно

TableGetFieldInt(TableResult:result, id) - взять целочисленное значение
из ответа по номеру колонки
result - результат
id - номер колонки
Возвращаемые значения:
0 - неверный тип результата или операция не удалась
Или значение из ответа

Float:TableGetFieldFloat(TableResult:result, id) - взять дробное значение
из ответа по номеру колонки
result - результат
id - номер колонки
Возвращаемые значения:
0 - неверный тип результата или операция не удалась
Или значение из ответа

--------------Функции первичного интерфейса----------------
SetGVarTableImageTemp({TableImage, _}:tableimage) - присвоить в временную переменную
управляющее название образа таблицы
tableimage - ID образа таблицы
Возвращаемые значение:
Всегда 1

SetGVarTableTemp({Table, _}:table) - присвоить в временную переменную
управляющее название таблицы
table - ID таблицы
Возвращаемые значение:
Всегда 1

SetGVarTableCacheTemp({TableCache, _}:cache) - присвоить в временную переменную
управляющее название кэша
cache - ID кэша
Возвращаемые значение:
Всегда 1

CheckGVarTemp() - узнать, существует ли временное управляющее название в виде GVar'a
Возвращаемое значение:
0 - названия не существует
1 - название существует

DeleteGVarTemp(size = 1) - удалить GVar временного управляющего названия
size - размер GVar'a для удаления
Возвращаемое значение:
0 - первый элемент из массива GVar не был удалён
1 - первый элемент из массива GVar был удалён

SetGVarIntTemp(value, id) - установить нужному элементу GVar временного управляющего
названия целочисленное значение
value - значение
id - ID элемента
Возвращаемое значение:
0 - не удалось установить значение GVar'у
1 - удалось установить значение GVar'у

SetGVarFloatTemp(Float:value, id) - установить нужному элементу GVar временного
управляющего названия дробное значение
value - значение
id - ID элемента
Возвращаемое значение:
0 - не удалось установить значение GVar'у
1 - удалось установить значение GVar'у

SetGVarFloatTemp(value[], id) - установить нужному элементу GVar временного
управляющего названия строковое значение
value - значение
id - ID элемента
Возвращаемое значение:
0 - не удалось установить значение GVar'у
1 - удалось установить значение GVar'у

GetGVarIntTemp(id) - узнать у нужного элемента GVar временного управляющего
названия целочисленное значение
id - ID элемента
Возвращаемое значение:
0 - не удалось узнать значение GVar'у
Или целочисленное значение

GetGVarFloatTemp(id) - узнать у нужного элемента GVar временного управляющего
названия дробное значение
id - ID элемента
Возвращаемое значение:
0 - не удалось узнать значение GVar'у
Или дробное значение

GetGVarStringTemp(value[], maxlenght = sizeof(value), id) - узнать у нужного элемента
GVar временного управляющего названия строковое значение
value - строка, куда будет помещено значение
maxlenght - максимальная длина строки
id - ID элемента
Возвращаемое значение:
0 - не удалось узнать значение GVar'у
1 - удалость узнать значение GVar'a

--------------Функции вторичного интерфейса----------------
SaveVarTable({Table, _}:table, TableImage:tableimage, TableDB:database, name[]) -
создание GVar значений таблицы
table - ID таблицы
tableimage - образ таблицы
database - база данных
name - название таблицы
Возвращаемое значение:
Всегда 1

LoadVarTable({Table, _}:table, &TableImage:tableimage, &TableDB:database, name[],
name_s = sizeof(name)) - загрузка данных из GVar значений таблицы
table - ID таблицы
tableimage - образ таблицы
database - база данных
name - название таблицы
name_s - максимальная длина таблицы
Возвращаемое значение:
Всегда 1

SaveVarTableCache({TableCache, _}:cache, Table:table, id[]) - создание GVar значений
кэша
cache - ID кэша
table - ID таблицы
id - ID строки внутри таблицы
Возвращаемое значение:
Всегда 1

LoadVarTableCache({TableCache, _}:cache, &Table:table, id[], id_s = sizeof(id)) -
загрузка данных из GVar значений кэша
cache - ID кэша
table - ID таблицы
id - ID строки внутри таблицы
id_s - максимальная длина строки для ID строки внутри таблицы
Возвращаемое значение:
Всегда 1

--------------Функции третичного интерфейса----------------
IsValidTableImage(TableImage:tableimage) - узнать создан ли образ таблицы
tableimage - ID образа таблицы
Возвращаемые значения:
0 - не создан
1 - создан

IsValidTable(Table:table) - узнать создана ли таблица
table - ID таблицы
Возвращаемые значения:
0 - не создана
1 - создана

IsValidTableCache(TableCache:cache) - узнать создан ли кэш
cache - ID кэша
Возвращаемые значения:
0 - не создана
1 - создана

--------------Функции четвертичного интерфейса----------------
TableCache:CreateTableCache() - создание пустого кэша для таблицы
Возвращаемые значения:
INVALID_TABLECACHE - при неудаче
TableCache:return - ID кэша

DestroyTableCache(TableCache:cache) - удалить кэш
cache - ID кэша
Возвращаемые значения:
0 - кэш не был создан ранее
1 - кэш успешно удалён

IsTableCacheLinked(TableCache:cache) - узнать присоединён ли кэш
cache - ID кэша
Возвращаемые значения:
0 - кэш не был создан ранее или не присоединён
1 - кэш присоединён

LinkTableCache(TableCache:cache, Table:table, id[]) - присоединить кэш
cache - ID кэша
table - таблица, из которой будет присоединена запись
id - ID записи (под столбцом id внутри таблицы)
Возвращаемые значения:
0 - кэш не был создан ранее или таблица не существует, или не удалось присодинить
1 - кэш присоединён

UnLinkTableCache(TableCache:cache) - отсоединить кэш
cache - кэш
Возвращаемые значения:
0 - кэш не был создан ранее или таблица, к которой был присоединён кэш, не существует
1 - кэш отсоединён

--------------Основные функции----------------
TableImage:TableImageCreate({_, Float, bool}:...) - создание образа таблицы
... - параметры в особом формате
Возвращаемые значения:
INVALID_TABLEIMAGE - не удалось создать образ таблицы (превышен лимит)
TableImage:return - ID образа таблицы

TableImage:GetTableImageByTable(Table:table) - узнать ID образа таблицы по ID таблицы
table - ID таблицы
Возвращаемые значения:
INVALID_TABLEIMAGE - таблица не существует или образ таблицы не существует
TableImage:return - ID образа таблицы

GetTableName(Table:table, tablename[], tablename_s = sizeof(tablename)) -
table - ID таблицы
tablename - строка, в которую будет записан результат
tablename_s - длина строки с результатом
Возвращаемые значения:
0 - таблицы не существует
1 - таблица существует

TableCreateBuild(TableImage:tableimage, tname[], TableDB:database,
dest[], dest_s = sizeof(dest)) - создать запрос на создание таблицы для базы данных
tableimage - ID образа таблицы
tname - название таблицы
database - база данных
dest - строка, куда будет записан запрос
dest_s - максимальная длина строки запрос
Возвращаемое значение:
0 - не удалось создать запрос, несуществующий образ таблицы, база данных или
пустое название
1 - запрос успешно создан

Table:TableCreate(TableImage:tableimage, TableDB:database, tname[], &TableResult:result)
- создать таблицу
tableimage - ID образа таблицы
database - база данных
tname - название таблицы
result - возвращаемый результат
Возвращаемое значение:
0 - таблица не была создана
1 - таблица создана

TableInsertBuild(TableImage:tableimage, tname[], dest[], dest_s = sizeof(dest),
{_, Float, bool}:...) - создать запрос на добавление строки в таблицу для базы данных
tableimage - ID образ таблицы
tname - название таблицы
dest - строка, куда будет записан запрос
dest_s - максимальная длина строки запрос
... - значения, которые будут вставлены в запрос по образу таблицы
Возвращаемое значение:
0 - не удалось создать запрос, несуществующий образ таблицы, база данных или
пустое название
1 - запрос создан

TableCache:TableInsert(Table:table, cached, {_, Float, bool}:...) - добавить
строку в таблицу
table - ID таблицы
cached -
	0 - кэширование не включено
	1 - кэширование включено
... - значения, которые будут вставлены в запрос по образу таблицы
Возвращаемое значение:
0 - строка не была добавлена
1 - строка добавлена

TableDelete(Table:table, &TableResult:result) - удалить таблицу
table - ID таблицы
result - возвращаемый результат
Возвращаемое значение:
0 - таблица не была удалена (не создана)
1 - таблица успешно удалена

TableCacheUpdate(TableCache:cache, &TableResult:result, {_, Float, bool}:...) -
обновить кэш (а конкретно строку в таблице в базе данных) новымыми результатами
cache - ID кэша
result - возвращаемый результат
... - значения, которые будут вставлены на своё место в строке по образу таблицы
Возвращаемое значение:
0 - несуществующий или неправильный кэш, отсутствие ID в таблице
1 - строка изменена

TableCacheDeleteRow(TableCache:cache, TableResult:result) - удалить строку,
заданную кэшем
cache - ID кэша
result - возвращаемый результат
Возвращаемое значение:
0 - несуществующий или неправильный кэш, отсутствие ID в таблице
1 - строка удалена

TableCacheLoadTemp(TableCache:cache, temp[]) - загрузить данные из строки в переменную
cache - ID кэша
temp - переменная (или адрес - для ассемблера), куда будет загружены данные
Возвращаемое значение:
0 - несуществующий или неправильный кэш, отсутствие ID в таблице
1 - успешная загрузка данных

TableCacheSaveTemp(TableCache:cache, temp[], temp_s = sizeof(temp)) - сохранить
данные в строке из переменной
cache - ID кэша
temp - переменная (или адрес - для ассемблера), откуда будут загружены данные
Возвращаемое значение:
0 - несуществующий или неправильный кэш, отсутствие ID в таблице
1 - успешное сохранение данных